diff --git a/src/hydro/new_blockdt.cpp b/src/hydro/new_blockdt.cpp
index 0dfe3b29..71e4f7aa 100644
--- a/src/hydro/new_blockdt.cpp
+++ b/src/hydro/new_blockdt.cpp
@@ -29,6 +29,10 @@
 #include "hydro.hpp"
 #include "hydro_diffusion/hydro_diffusion.hpp"

+// snap injection
+#include <impl.hpp>
+#include <snap/implicit/implicit_solver.hpp>
+
 // MPI/OpenMP header
 #ifdef MPI_PARALLEL
 #include <mpi.h>
@@ -112,9 +116,21 @@ void Hydro::NewBlockTimeStep() {
               Real speed1 = std::max(cspeed, (std::abs(wi[IVX]) + cs));
               Real speed2 = std::max(cspeed, (std::abs(wi[IVY]) + cs));
               Real speed3 = std::max(cspeed, (std::abs(wi[IVZ]) + cs));
-              dt1(i) /= (speed1);
-              dt2(i) /= (speed2);
-              dt3(i) /= (speed3);
+              int implicit_flag = pmb->pimpl->phevi->GetImplicitFlag();
+              if ((implicit_flag & 1) && (pmb->block_size.nx2 > 1))
+                dt1(i) /= pmb->pmy_mesh->cfl_number * std::abs(wi[IVX]);
+              else
+                dt1(i) /= (speed1);
+
+              if (implicit_flag & 2)
+                dt2(i) /= pmb->pmy_mesh->cfl_number * std::abs(wi[IVY]);
+              else
+                dt2(i) /= (speed2);
+
+              if (implicit_flag & 4)
+                dt3(i) /= pmb->pmy_mesh->cfl_number * std::abs(wi[IVZ]);
+              else
+                dt3(i) /= (speed3);
             }
           } else { // FluidFormulation::background or disabled. Assume scalar advection:
             dt1(i) /= (std::abs(wi[IVX]));
