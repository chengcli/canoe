diff --git a/src/hydro/new_blockdt.cpp b/src/hydro/new_blockdt.cpp
index 8b5959f3..f293b7e6 100644
--- a/src/hydro/new_blockdt.cpp
+++ b/src/hydro/new_blockdt.cpp
@@ -26,6 +26,10 @@
 #include "hydro.hpp"
 #include "hydro_diffusion/hydro_diffusion.hpp"

+// snap injection
+#include <impl.hpp>
+#include <snap/implicit/implicit_solver.hpp>
+
 // MPI/OpenMP header
 #ifdef MPI_PARALLEL
 #include <mpi.h>
@@ -97,9 +101,25 @@ void Hydro::NewBlockTimeStep() {
               dt3(i) /= (std::abs(wi[IVZ]) + cf);
             } else {
               Real cs = pmb->peos->SoundSpeed(wi);
-              dt1(i) /= (std::abs(wi[IVX]) + cs);
-              dt2(i) /= (std::abs(wi[IVY]) + cs);
-              dt3(i) /= (std::abs(wi[IVZ]) + cs);
+              int implicit_flag = pmb->pimpl->phevi->GetImplicitFlag();
+              if ((implicit_flag & 1) && (pmb->block_size.nx2 > 1))
+                dt1(i) /= pmb->pmy_mesh->cfl_number * std::abs(wi[IVX]);
+              else
+                dt1(i) /= (std::abs(wi[IVX]) + cs);
+
+              if (implicit_flag & 2)
+                dt2(i) = dt2(i) / std::max(std::abs(wi[IVY]) + cs,
+                                           pmb->pmy_mesh->cfl_number *
+                                               std::abs(wi[IVY]));
+              else
+                dt2(i) /= (std::abs(wi[IVY]) + cs);
+
+              if (implicit_flag & 4)
+                dt3(i) = dt3(i) / std::max(std::abs(wi[IVZ]) + cs,
+                                           pmb->pmy_mesh->cfl_number *
+                                               std::abs(wi[IVZ]));
+              else
+                dt3(i) /= (std::abs(wi[IVZ]) + cs);
             }
           } else { // FluidFormulation::background or disabled. Assume scalar advection:
             dt1(i) /= (std::abs(wi[IVX]));
